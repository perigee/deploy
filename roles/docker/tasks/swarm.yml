---

#- name: testing only
#  shell: docker swarm leave --force
#  ignore_errors: yes

- name: check swarm mode
  shell: docker info --format \{\{\.Swarm\.LocalNodeState\}\}
  register: swarm_status

- name: gather all manager
  set_fact:
    manager_list: "{{ manager_list|default([]) + [ { 'ip': item, 'swarm_status': hostvars[item]['swarm_status'].stdout }] }}"
  with_inventory_hostnames:
    - swarm_manager

- name: set primary
  set_fact: swarm_primary={{ item }}
  until: swarm_primary['swarm_status']=='active'
  retries: 0
  with_items: "{{ manager_list }}"

- name: show primary
  debug: msg={{ swarm_primary }}

- name: run only once among all
  shell: docker swarm init
  run_once: true
  delegate_to: "{{ swarm_primary['ip'] }}"
  when: swarm_primary['swarm_status']!='active'

# https://github.com/ansible/ansible/issues/23883
- name: update swarm status needed again (WORKAROUND FOR register in delegate_to)
  shell: docker info --format \{\{\.Swarm\.LocalNodeState\}\}
  register: swarm_status

- name: fetch worker token
  shell: docker swarm join-token worker -q
  register: swarm_worker_token
  run_once: true
  delegate_to: "{{ swarm_primary['ip'] }}"

- name: fetch manager token
  shell: docker swarm join-token worker -q
  register: swarm_manager_token
  run_once: true
  delegate_to: "{{ swarm_primary['ip'] }}"


#################
# ADD MANAGER
#################
- name: manager set fact
  set_fact:
    swarm_token: "{{ hostvars[swarm_primary['ip']]['swarm_manager_token'] }}"
    swarm_manager_ip: "{{ swarm_primary['ip'] }}"
  when: "'swarm_manager' in group_names and swarm_status.stdout=='inactive' "

- name: manager join manager
  shell: docker swarm join --token {{ swarm_token.stdout }} {{ swarm_manager_ip }}:2377
  when: "'swarm_manager' in group_names and swarm_status.stdout=='inactive' "


#################
# ADD WORKER
#################
- name: worker set fact
  set_fact:
    swarm_token: "{{ hostvars[swarm_primary['ip']]['swarm_worker_token'] }}"
    swarm_manager_ip: "{{ swarm_primary['ip'] }}"
  when: "'swarm_worker' in group_names and swarm_status.stdout=='inactive' "

- name: worker show token
  debug: msg={{ swarm_token.stdout }}
  when: "'swarm_worker' in group_names and swarm_status.stdout=='inactive' "

- name: worker show ip
  debug: msg={{ swarm_manager_ip }}
  when: "'swarm_worker' in group_names and swarm_status.stdout=='inactive' "

- name: worker join manager
  shell: docker swarm join --token {{ swarm_token.stdout }} {{ swarm_manager_ip }}:2377
  when: "'swarm_worker' in group_names and swarm_status.stdout=='inactive' "
